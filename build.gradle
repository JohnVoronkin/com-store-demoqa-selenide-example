group 'com.store.demoqa.selenide.example'

defaultTasks 'clean', 'test'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}

repositories {
    mavenCentral()
}

ext.junitPlatformVersion = '1.0.0-M3'
ext.junitJupiterVersion  = '5.0.0-M4'
ext.log4jVersion         = '2.6.2'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'



jar {
    baseName = 'junit5-gradle-consumer'
    version = '1.2.0-SNAPSHOT'
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

junitPlatform {
    // platformVersion '1.0.0-M4'
    filters {
        engines {
            // include 'junit-jupiter', 'junit-vintage'
            // exclude 'custom-engine'
        }
        tags {
            // include 'fast'
            exclude 'slow'
        }
        // includeClassNamePattern '.*Test'
    }
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

dependencies {
    // http://ru.selenide.org/quick-start.html
    compile 'com.codeborne:selenide:4.4.1'
    // https://github.com/bonigarcia/webdrivermanager
    compile 'io.github.bonigarcia:webdrivermanager:1.6.0'
    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest-all
    compile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.24'
    // https://mvnrepository.com/artifact/io.qala.datagen/qala-datagen
    compile group: 'io.qala.datagen', name: 'qala-datagen', version: '1.10.1'
    // http://junit.org/junit5/
    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")

    testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    testTask ->
        testTask.useJUnit()
        testTask.reports.junitXml.enabled = false
        testTask.reports.html.enabled = true
        testTask.systemProperties(
                'selenide.start.maximized': true,
                'selenide.savePageSource': false,
                'selenide.timeout': 6000,
        )
}
